
[import "test"]
[import "capitol"]

[TestEq "list *" "user! capitol test studio" *x [list *x]]
[TestEq "list : *" ["user!" "capitol" "test" "studio"] *x [list : *x]]
[TestEq "list \"capitol\" *" "capitol\n" *x [list "capitol" *x]]
[TestEq "list \"capitol\" : *" [capitol] *x [list "capitol" : *x]]
[TestEq "list not *" "[[not : *0] *0 / fail]\n[[not : *0]]\n" *x [list not *x]]
[TestEq "list not : *" [[[not : *i] *i / fail] [[not : *i]]] *x [list not : *x]]

[scripted_atoms]
[TestFails "scripted_atoms" [text_term "sonda" *x]]
[auto_atoms]
[TestWorks "auto_atoms" [text_term "sonda" *x]]
[scripted_atoms]

[TestEq "CL atom index *clause" [[capitol "Australia" "Canberra"]] *x [CL capitol 0 *x]]
[TestEq "CL atom index:*clause" [[capitol "New Zealand" "Wellington"]] *x [CL capitol 1 : *x]]
[TestEq "CL index atom *clause" [[capitol "France" "Paris"]] *x [CL 2 capitol *x]]
[TestEq "CL index atom:*clause" [[capitol "Poland" "Warsaw"]] *x [CL 3 capitol : *x]]
[TestEq "CL atom *index" 5 *x [CL capitol *x]]
[TestEq "CL atom:*index" 5 *x [CL capitol *x]]
[TestWorks "CL atom index" [CL capitol 5]]
[TestFails "CL atom index" [CL capitol 4]]
[TestWorks "CL atom:index" [CL capitol : 5]]
[TestFails "CL atom:index" [CL capitol : 4]]

[TestEq "DELCL" [[[capitol "Australia" "Canberra"]] [[capitol "Poland" "Warsaw"]] [[capitol "USA" "Cupertino"]]] *x [DELCL capitol 2] [DELCL 1 capitol] [list capitol : *x]]

[TestFails "DELCL Fails 1" [DELCL capitol 3]]
[TestFails "DELCL Fails 2" [DELCL 3 capitol]]
[TestFails "DELCL Fails 3" [DELCL capitol -1]]
[TestFails "DELCL Fails 4" [DELCL -1 capitol]]

[TestFails "DELCL Protected" [DELCL 0 not]]

[TestEq "OVERWRITE" [[[capitol "Australia" "Canberra"]] [[capitol "Poland" "Warsaw"]] [[capitol] [show capitol]]] *x [OVERWRITE 2 [[capitol] [show capitol]]]]
[TestFails "OVERWRITE Fails 1" [OVERWRITE 3 [[capitol] [show capitol]]]]
[TestFails "OVERWRITE Fails 2" [OVERWRITE 0 [[enter]]]]

[TestFails "OVERWRITE Protected" [OVERWRITE 0 [[not]]]]

[TestFails "addcl0 protected" [addcl0 [[not]]]]
[TestEq "addcl0" [[capitol 1] 2 3 fail] *x [addcl0 [[capitol 1] 2 3 fail]] [CL 0 capitol *x]]
[TestFails "addcl protected" [addcl [[not]]]]
[TestEq "addcl" [[capitol 2] 33 4 fail] *x [addcl [[capitol 2] 33 4 fail] 4] [CL capitol 4 *x]]
[TestEq "addcl -1" [[capitol 123]] *x [addcl [[capitol 123]] -1] [CL 0 capitol *x]]
[TestEq "addcl 3" [[capitol fail]] *x [addcl [[capitol fail]] 3] [CL 3 capitol *x]]

[TestFails "create_atom 127 (confirms not atom)" [create_atom 127]]
[TestWorks "create_atom atom (confirms atom)" [create_atom sonda]]
[TestEq "create_atom *var (anonymous)" [sonda] *x [create_atom *atom] [list "user!" : *x] [is_atom *atom]]
[TestEq "create_atom name" "mariner sonda\n" *x [create_atom "mariner"] [list "user!" *x]]
[TestEq "create_atom name *var" ["mariner sonda\n" "voyager"] [*x *y] [create_atom "voyager" *atom] [add "" *atom *y] [list "user!" *x]]
[TestEq "create_atom name:*var" ["mariner sonda\n" "voyager"] [*x *y] [create_atom "voyager" *atom] [add "" *atom : *y] [list "user!" *x]]

[TestFails "search_atom directory/atom 1" [search_atom "stdio" "command" *x]]
[TestFails "search_atom directory/atom 2" [search_atom "studio" "cmmnd" *x]]
[TestFails "search_atom atom" [search_atom "cmmnd" *x]]
[TestEq "search_atom 1" command *x [search_atom "studio" "command" *x]]
[TestEq "search_atom 2" command *x [search_atom "studio" "command" : *x]]
[TestEq "search_atom 3" command *x [search_atom "command" *x]]
[TestEq "search_atom 4" command *x [search_atom "command" : *x]]

[TestEq "preprocessor *x" [] *x [preprocessor *x]]
[TestEq "preprocessor:*x" [] *x [preprocessor : *x]]
[TestEq "preprocessor eq" eq *x [preprocessor eq] [preprocessor : *x]]
[TestEq "preprocessor []" [] *x [preprocessor []] [preprocessor *x]]
[TestEq "preprocessor:eq" eq *x [preprocessor eq] [preprocessor : *x]]
[TestEq "[preprpocessor]" [] *x [preprocessor] [preprocessor : *x]]

[TestWorks "prompt set" [prompt "=> "]]
[TestEq "prompt *x" "=> " *x [prompt *x]]
[TestEq "prompt:*x" "=> " *x [prompt : *x]]

[TestWorks "is_atom atom" [is_atom command]]
[TestFails "is_atom 127" [is_atom 127]]

[TestWorks "is_integer 127" [is_integer 127]]
[TestFails "is_integer 127.0" [is_integer command]]

[TestWorks "is_double 127.0" [is_double 127.0]]
[TestFails "is_double 127" [is_double 127]]

[TestWorks "is_number 127.0" [is_number 127.0]]
[TestWorks "is_number 127" [is_number 127]]
[TestFails "is_number atom" [is_number command]]

[TestWorks "is_var *" [is_var *]]
[TestFails "is_var atom" [is_var command]]

[TestFails "is_head atom" [is_head command]]

[TestWorks "is_text text" [is_text "sonda"]]
[TestFails "is_text atom" [is_text command]]

[TestWorks "has_machine sum" [has_machine sum]]
[TestFails "has_machine command" [has_machine command]]
[TestWorks "has_machine studio" [has_machine "studio"]]
[TestFails "has_machine capitol" [has_machine "capitol"]]

[TestEq "text_list sonda" [115 111 110 100 97] *x [text_list "sonda" *x]]
[TestEq "text_list 115 111 110 100 97" "sonda" *x [text_list *x [115 111 110 100 97]]]

[TestEq "e32 *" 0 *x [e32 *x]]
[TestEq "e32 * be" 190 *x [e32 *x 0xbe]]
[TestEq "e32 * babe" 47806 *x [e32 *x 0xbe 0xba]]
[TestEq "e32 * febabe" 16693950 *x [e32 *x 0xbe 0xba 0xfe]]
[TestEq "e32 * cafebabe" -889275714 *x [e32 *x 0xbe 0xba 0xfe 0xca]]
[TestEq "e32 -889275714 : *" [0xbe 0xba 0xfe 0xca] *x [e32 -889275714 : *x]]
[TestEq "e32 cafebabe" [0xbe 0xba 0xfe 0xca] [*a *b *c *d] [e32 -889275714 *a *b *c *d]]

[TestEq "sum [1 2 *]" 3 *x [sum 1 2 *x]]
[TestEq "sum [1 2.0 : *]" 3.0 *x [sum 1 2.0 : *x]]
[TestEq "sum [1 * 3]" 2 *x [sum 1 *x 3]]
[TestEq "sum [1 * : 3.0]" 2.0 *x [sum 1 *x : 3.0]]
[TestEq "sum [1.0 2 : *]" 3.0 *x [sum 1.0 2 : *x]]
[TestEq "sum [1.0 2.0 *]" 3.0 *x [sum 1.0 2.0 *x]]
[TestEq "sum [1.0 * : 3]" 2.0 *x [sum 1.0 *x : 3]]
[TestEq "sum [1.0 * 3.0]" 2.0 *x [sum 1.0 *x 3.0]]
[TestEq "sum [* 2 : 3]" 1 *x [sum *x 2 : 3]]
[TestEq "sum [* 2 3.0]" 1.0 *x [sum *x 2 3.0]]
[TestEq "sum [* 2.0 : 3]" 1.0 *x [sum *x 2.0 : 3]]
[TestEq "sum [* 2.0 3.0]" 1.0 *x [sum *x 2.0 3.0]]

[TestEq "times [2 8 : *]" 16 *x [times 2 8 : *x]]
[TestEq "times [2 8.5 *]" 17.0 *x [times 2 8.5 *x]]
[TestFails "times [0 * 16]" [times 0 * 16]]
[TestEq "times [2 * 17]" 8 *x [times 2 *x 17]]
[TestEq "times [2 * : 17.0]" 8.5 *x [times 2 *x : 17.0]]
[TestEq "times [2.0 8  *]" 16.0 *x [times 2.0 8 *x]]
[TestEq "times [2.0 8.5 : *]" 17.0 *x [times 2.0 8.5 : *x]]
[TestFails "times [0.0 * : 16]" [times 0.0 * : 16]]
[TestEq "times [2.0 * : 17]" 8.5 *x [times 2.0 *x : 17]]
[TestEq "times [2.0 * 17.0]" 8.5 *x [times 2.0 *x 17.0]]
[TestFails "times [* 0 : 17]" [times * 0 : 17]]
[TestEq "times [* 8 17]" 2 *x [times *x 8 17]]
[TestEq "times [* 8 : 17.0]" 2.125 *x [times *x 8 : 17.0]]
[TestFails "times [* 0.0 17]" [times * 0.0 17]]
[TestEq "times [* 8.5 17]" 2.0 *x [times *x 8.5 17]]
[TestEq "times [* 8.5 : 17.0]" 2.0 *x [times *x 8.5 : 17.0]]

[TestEq "add * 1 2" 3 *x [add *x 1 2]]
[TestEq "add * 1 2 3.0" 6.0 *x [add *x 1 2 3.0]]
[TestEq "add * 1 2 \"0\"" "30" *x [add *x 1 2 "0"]]
[TestEq "add * 1 2 3.0 command" "6.000000command" *x [add *x 1 2 3.0 command]]
[TestEq "add 1 2 *" 3 *x [add 1 2 *x]]
[TestEq "add 1 2 3.0 *" 6.0 *x [add 1 2 3.0 *x]]
[TestEq "add 1 2 \"0\" *" "30" *x [add 1 2 "0" *x]]
[TestEq "add 1 2 3.0 command *" "6.000000command" *x [add 1 2 3.0 command *x]]
[TestEq "add 1 2:*" 3 *x [add 1 2 : *x]]
[TestEq "add 1 2 3.0:*" 6.0 *x [add 1 2 3.0 : *x]]
[TestEq "add 1 2 \"0\":*" "30" *x [add 1 2 "0" : *x]]
[TestEq "add 1 2 3.0 command:*" "6.000000command" *x [add 1 2 3.0 command : *x]]
[TestEq "add *" 0 *x [add *x]]

[TestEq "div 7 2 *" 3 *x [div 7 2 *x]]
[TestEq "div 7 2.0 : *" 3.5 *x [div 7 2.0 : *x]]
[TestEq "div 7.0 2 : *" 3.5 *x [div 7.0 2 : *x]]
[TestEq "div 7.0 2.0 *" 3.5 *x [div 7.0 2.0 *x]]
[TestFails "div 7 0" [div 7 0 *x]]
[TestFails "div 7 0.0" [div 7 0.0 *x]]

[TestEq "mod 14 5 : *" 4 *x [mod 14 5 : *x]]
[TestEq "mod 14 5 * : *" [4 2] [*x *y] [mod 14 5 *x : *y]]
[TestEq "mod 14 5.0 *" 4.0 *x [mod 14 5.0 *x]]
[TestEq "mod 14 5.0 * *" [4.0 2.0] [*x *y] [mod 14 5.0 *x *y]]
[TestEq "mod 14.0 5 : *" 4.0 *x [mod 14.0 5 : *x]]
[TestEq "mod 14.0 5 * : *" [4.0 2.0] [*x *y] [mod 14.0 5.0 *x : *y]]
[TestEq "mod 14.0 5.0 *" 4.0 *x [mod 14.0 5 *x]]
[TestEq "mod 14.0 5.0 * *" [4.0 2.0] [*x *y] [mod 14.0 5.0 *x *y]]

[TestEq "sub 7 4 *" 3 *x [sub 7 4 *x]]
[TestEq "sub 7 8.25 : *x" -1.25 *x [sub 7 8.25 : *x]]
[TestEq "sub 7.0 4 : *" 3.0 *x [sub 7.0 4 : *x]]
[TestEq "sub 7.0 3.0 *" 4.0 *x [sub 7.0 3.0 *x]]

[TestEq "mult * 4 2" 8 *x [mult *x 4 2]]
[TestEq "mult * 4 2 3.0" 24.0 *x [mult *x 4 2 3.0]]
[TestEq "mult 4 2 *" 8 *x [mult 4 2 *x]]
[TestEq "mult 4 2 3.0 *" 24.0 *x [mult 4 2 3.0 *x]]
[TestEq "mult 4 2:*" 8 *x [mult 4 2 : *x]]
[TestEq "mult 4 2 3.0:*" 24.0 *x [mult 4 2 3.0 : *x]]
[TestEq "mult *" 1 *x [mult *x]]

[TestEq "and 0x303003 0xf0d00e *" 0x301002 *x [and 0x303003 0xf0d00e *x]]
[TestEq "and 0xf0d00e 0x303003:*" 0x301002 *x [and 0xf0d00e 0x303003 : *x]]

[TestEq "or 0x303003 0xf0d00e *" 0xf0f00f *x [or 0x303003 0xf0d00e *x]]
[TestEq "or 0xf0d00e 0x303003:*" 0xf0f00f *x [or 0xf0d00e 0x303003 : *x]]

[TestEq "xor 0x303003 0xf0d00e *" 0xc0e00d *x [xor 0x303003 0xf0d00e *x]]
[TestEq "xor 0xf0d00e 0x303003:*" 0xc0e00d *x [xor 0xf0d00e 0x303003 : *x]]

[TestEq "abs 127:*" 127 *x [abs 127 : *x]]
[TestEq "abs -127 *" 127 *x [abs -127 *x]]
[TestEq "abs 127.5 *" 127.5 *x [abs 127.5 *x]]
[TestEq "abs -127.5:*" 127.5 *x [abs 127.5 : *x]]

[TestEq "cos 180 *" -1.0 *x [cos 180 *x]]
[TestEq "cos 180:*" -1.0 *x [cos 180 : *x]]
[TestEq "cos 3.1415926535897931 *" -1.0 *x [cos 3.1415926535897931 *x]]
[TestEq "cos 3.1415926535897931:*" -1.0 *x [cos 3.1415926535897931 : *x]]
[TestEq "cos * -1" 3.1415926535897931 *x [cos *x -1]]
[TestEq "cos * : -1.0" 3.1415926535897931 *x [cos *x : -1.0]]
[TestFails "cos * -2.0" [cos * -2.0]]
[TestFails "cos * : 2" [cos * : 2]]

[TestEq "sin 90 *" 1.0 *x [sin 90 *x]]
[TestEq "sin 270:*" -1.0 *x [sin 270 : *x]]
[TestEq "sin -1.5707963267948966 *" -1.0 *x [sin -1.5707963267948966 *x]]
[TestEq "sin 1.5707963267948966:*" 1.0 *x [sin 1.5707963267948966 : *x]]
[TestEq "sin * 1" 1.5707963267948966 *x [sin *x 1]]
[TestEq "sin * : -1.0" -1.5707963267948966 *x [sin *x : -1.0]]
[TestFails "sin * -2.0" [sin * -2.0]]
[TestFails "sin * : 2" [sin * : 2]]

[TestEq "degrad 180 *" 3.1415926535897931 *x [degrad 180 *x]]
[TestEq "degrad 180:*" 3.1415926535897931 *x [degrad 180 : *x]]
[TestEq "degrad * 3.1415926535897931" 180.0 *x [degrad *x 3.1415926535897931]]
[TestEq "degrad *:3.1415926535897931" 180.0 *x [degrad *x : 3.1415926535897931]]

[TestEq "e *" 2.7182818284590451 *x [e *x]]
[TestEq "e : *" 2.7182818284590451 *x [e : *x]]
[TestEq "pi *" 3.1415926535897931 *x [pi *x]]
[TestEq "pi : *" 3.1415926535897931 *x [pi : *x]]

[TestEq "exp 8.0 *" 2980.95798704172827 *x [exp 8.0 *x]]
[TestEq "exp 8 : *" 2980 *x [exp 8 : *x]]
[TestEq "exp * : 2980.95798704172827" 8.0 *x [exp *x : 2980.95798704172827]]
[TestEq "exp * 2980" 7 *x [exp *x 2980]]
[TestFails "exp * 0.0" [exp * 0.0]]
[TestFails "exp : -1" [exp * -1]]

[TestEq "log2 8.0 *" 3.0 *x [log2 8.0 *x]]
[TestEq "log2 8 : *" 3 *x [log2 8 : *x]]
[TestEq "log2 *x 3.0" 8.0 *x [log2 *x 3.0]]
[TestEq "log2 *x : 3" 8 *x [log2 *x : 3]]
[TestFails "log2 0.0 : *" [log2 0.0 : *]]
[TestFails "log2 -1 *" [log2 -1 *]]

[TestEq "log10 1000.0 *" 3.0 *x [log10 1000.0 *x]]
[TestEq "log10 1000 : *" 3 *x [log10 1000 : *x]]
[TestEq "log10 *x 3.0" 1000.0 *x [log10 *x 3.0]]
[TestEq "log10 *x : 3" 1000 *x [log10 *x : 3]]
[TestFails "log10 0.0 *" [log10 0.0 *]]
[TestFails "log10 -1 : *" [log10 -1 : *]]

[TestEq "ln 20.085536923187669 *" 3.0 *x [ln 20.085536923187669 *x]]
[TestEq "ln 21 : *" 3 *x [ln 21 : *x]]
[TestEq "ln *x 3.0" 20.085536923187672 *x [ln *x 3.0]]
[TestEq "ln *x : 3" 20 *x [ln *x : 3]]
[TestFails "ln 0.0 *" [ln 0.0 *]]
[TestFails "ln -1 : *" [ln -1 : *]]

[nl]

[TestSummary]

[nl]

[foreground 0xffff00]

[exit]
